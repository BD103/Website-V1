{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BD103 Coding and Creation Hi! I'm BD103. I do things, like code. Learn more here . Most Recent Creation Notepad Notepad is a simple, well. Uh... Notepad? Yeah, that's the right word. It basically has two sections: A working plain text editor, with printing page support A working code editor! It highlights it all, with multi-language support! If you want to see a working (maybe) demo, go to notepad.bd103.repl.co . Enjoy!","title":"Home"},{"location":"#bd103","text":"Coding and Creation Hi! I'm BD103. I do things, like code. Learn more here .","title":"BD103"},{"location":"#most-recent-creation","text":"","title":"Most Recent Creation"},{"location":"#notepad","text":"Notepad is a simple, well. Uh... Notepad? Yeah, that's the right word. It basically has two sections: A working plain text editor, with printing page support A working code editor! It highlights it all, with multi-language support! If you want to see a working (maybe) demo, go to notepad.bd103.repl.co . Enjoy!","title":"Notepad"},{"location":"about/","text":"About Who are you? Someone who exists somewhere. I enjoy coding, composing music, and ocasional making art. What languages do you know? I know HTML, CSS, and Python really well. I also know bits and pieces of JS, PHP, Bash, C#, and Java. Where can I find you? On earth. :P Ok, just joking. Here are some links: Site Repl.it Github What are some of your projects? Check out some of my projects, like my PyPI Package and MkDocs Helper . You can also check out the projects section of this site.","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#who-are-you","text":"Someone who exists somewhere. I enjoy coding, composing music, and ocasional making art.","title":"Who are you?"},{"location":"about/#what-languages-do-you-know","text":"I know HTML, CSS, and Python really well. I also know bits and pieces of JS, PHP, Bash, C#, and Java.","title":"What languages do you know?"},{"location":"about/#where-can-i-find-you","text":"On earth. :P Ok, just joking. Here are some links: Site Repl.it Github","title":"Where can I find you?"},{"location":"about/#what-are-some-of-your-projects","text":"Check out some of my projects, like my PyPI Package and MkDocs Helper . You can also check out the projects section of this site.","title":"What are some of your projects?"},{"location":"contact/","text":"Contact Me This page is in development, please use with caution! Name: Email:","title":"Contact"},{"location":"contact/#contact-me","text":"This page is in development, please use with caution! Name: Email:","title":"Contact Me"},{"location":"license/","text":"License This work by BD103 is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License . Repl.it , PyCharm , and MkDocs have no affiliation with me. I just use their products, and highly suggest you do too! All rights reserved for all the ideas under the ideas tab. Please do not create without asking first!","title":"License"},{"location":"license/#license","text":"This work by BD103 is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License . Repl.it , PyCharm , and MkDocs have no affiliation with me. I just use their products, and highly suggest you do too! All rights reserved for all the ideas under the ideas tab. Please do not create without asking first!","title":"License"},{"location":"ideas/","text":"Ideas This section is full of random ideas that I've had, but never came around to working on them. If you are interested in creating one of them, you can contact me here","title":"Home"},{"location":"ideas/#ideas","text":"This section is full of random ideas that I've had, but never came around to working on them. If you are interested in creating one of them, you can contact me here","title":"Ideas"},{"location":"ideas/waveform/","text":"Waveform (Minecraft Mod) Waveform is a mod idea that I have that customizes the music that plays in Minecraft: Java Edition. Basically, Dynamic Sounds. It uses position, biome, dimension, time, health, weather, y level, and more. Variables Key Description Value Title Screen Whether to play on the title screen or not None Time How old the world is Integer Sun Position Sunrise, Midday, Sunset, Midnight, Day, Night Choice Weather Clear, Rain, Thunderstorm, Snow, Snowstorm Choice Y Pos How high or low in the world the person is Integer Biome What biome the person is in String Dimension Overworld, Nether, End, etc. Default is Overworld if not mentioned. String In Battle Whether hostile mob is trying to attack the player None In Battle w (Enemy) Fighting a specific hostile mob, depends on mob closest to you Choice Structure In or around (20 blocks) a structure. Nether Fortress, Village, etc. String Death To play on death None Interacting w Dog Feeding Dog, Dog Following None Fight w Dog In Battle with dog helping None Interacting w Cat Feeding Cat, Cat Following, Cat Scaring Creeper None Default Plays when any of the others can't None Distance from Spawn How far away from spawn a player is Integer Near Player If player is near (50 blocks) another player None Wet In water for more than 20 seconds or in sea biome, below sea level or having nautilus effect Boolean Music Disc Can be enabled or disabled in settings. None Setup Song (Key=Value, Repeat) Commands /waveform , /wf Gives a list of commands and what they do. /song <song> [synced] [entity] Plays <song> everywhere if [synced] (default) is true. If false, then only plays for certain entity specified as [entity] . /waveform list [song] , /wf list [song] Sends a list of all the songs that are dynamic if [song] isn't specified. List values can be clicked to send the command /wf list [song] to chat, to give info. If specified, then it gives information on that song. Information includes keys, values, percentages, and whether the person is currently applicable for this song to be played. /waveform get [player] , /wf get [player] If [player] isn't specified, says what song is currently playing and what that song's keys and values and percentages are for the person sending the command. If [player] is specified, than it shows info on that person. If @a is entered, then shows info for each person. /waveform set <setting> <value> Changes the current value of a setting to <value> . Songs Minecraft - Volume Alpha (C418) Key () Door Subwoofer Lullaby Death Living Mice Moog City Haggstrom Minecraft (Title SunPosition=Sunrise) Oxygene Equinoxe Mice on Venus Dry Hands Wet Hands Clark Chris Thirteen Excuse Sweden Cat Dog Danny Beginning Droopy Likes Ricochet Droopy Likes Your Face Minecraft - Volume Beta - Main (C418) Ki Alpha Dead Voxel Blind Spots Flake Moog City 2 Concrete Halls Biome Fest Mutation Haunt Muskie Warmth Floating Trees (Time=Day and Weather=Clear) Aria Math Kyoto Ballad of the Cats Taswell Beginning Dreiton The End Intro Minecraft - Volume Beta - Discs (C418) Chirp (Music Disc) Wait (Music Disc) Mellohi (Music Disc) Stal (Music Disc) Strad (Music Disc) Eleven (Music Disc) Ward (Music Disc) Mall (Music Disc) Blocks (Music Disc) Far (Music Disc) Minecraft - Aquatic Update (C418) Axolotl Shuniji Dragon Fish Minecraft - Nether Update (Lena Raine) Chrysopoeia Rubedo So Below Pigstep - Mono Mix Pigstep - Stereo Mix Settings Setting Description Type Default Enabled Enables the whole entire mod Boolean True Custom Sounds Whether to get custom sounds from resource pack or not Boolean True Client Side Disables non client side features, like structure and battle music. Boolean False Prime Color Primary color when using chat. Numbers to color escape codes. Integer 36 Second Color Secondary color when using chat. Numbers to escape codes. Integer 32 Visualizer Shows waveform of current song in top right hand corner of the screen. Boolean False Music Disc Ambience Whether music disc songs can be added to the rotation of songs. Boolean False License Just as a note, all rights reserved. If you wish to create this mod, you can contact me. Thank you.","title":"Waveform"},{"location":"ideas/waveform/#waveform-minecraft-mod","text":"Waveform is a mod idea that I have that customizes the music that plays in Minecraft: Java Edition. Basically, Dynamic Sounds. It uses position, biome, dimension, time, health, weather, y level, and more.","title":"Waveform (Minecraft Mod)"},{"location":"ideas/waveform/#variables","text":"Key Description Value Title Screen Whether to play on the title screen or not None Time How old the world is Integer Sun Position Sunrise, Midday, Sunset, Midnight, Day, Night Choice Weather Clear, Rain, Thunderstorm, Snow, Snowstorm Choice Y Pos How high or low in the world the person is Integer Biome What biome the person is in String Dimension Overworld, Nether, End, etc. Default is Overworld if not mentioned. String In Battle Whether hostile mob is trying to attack the player None In Battle w (Enemy) Fighting a specific hostile mob, depends on mob closest to you Choice Structure In or around (20 blocks) a structure. Nether Fortress, Village, etc. String Death To play on death None Interacting w Dog Feeding Dog, Dog Following None Fight w Dog In Battle with dog helping None Interacting w Cat Feeding Cat, Cat Following, Cat Scaring Creeper None Default Plays when any of the others can't None Distance from Spawn How far away from spawn a player is Integer Near Player If player is near (50 blocks) another player None Wet In water for more than 20 seconds or in sea biome, below sea level or having nautilus effect Boolean Music Disc Can be enabled or disabled in settings. None","title":"Variables"},{"location":"ideas/waveform/#setup","text":"Song (Key=Value, Repeat)","title":"Setup"},{"location":"ideas/waveform/#commands","text":"","title":"Commands"},{"location":"ideas/waveform/#waveform-wf","text":"Gives a list of commands and what they do.","title":"/waveform, /wf"},{"location":"ideas/waveform/#song-song-synced-entity","text":"Plays <song> everywhere if [synced] (default) is true. If false, then only plays for certain entity specified as [entity] .","title":"/song &lt;song&gt; [synced] [entity]"},{"location":"ideas/waveform/#waveform-list-song-wf-list-song","text":"Sends a list of all the songs that are dynamic if [song] isn't specified. List values can be clicked to send the command /wf list [song] to chat, to give info. If specified, then it gives information on that song. Information includes keys, values, percentages, and whether the person is currently applicable for this song to be played.","title":"/waveform list [song], /wf list [song]"},{"location":"ideas/waveform/#waveform-get-player-wf-get-player","text":"If [player] isn't specified, says what song is currently playing and what that song's keys and values and percentages are for the person sending the command. If [player] is specified, than it shows info on that person. If @a is entered, then shows info for each person.","title":"/waveform get [player], /wf get [player]"},{"location":"ideas/waveform/#waveform-set-setting-value","text":"Changes the current value of a setting to <value> .","title":"/waveform set &lt;setting&gt; &lt;value&gt;"},{"location":"ideas/waveform/#songs","text":"","title":"Songs"},{"location":"ideas/waveform/#minecraft-volume-alpha-c418","text":"Key () Door Subwoofer Lullaby Death Living Mice Moog City Haggstrom Minecraft (Title SunPosition=Sunrise) Oxygene Equinoxe Mice on Venus Dry Hands Wet Hands Clark Chris Thirteen Excuse Sweden Cat Dog Danny Beginning Droopy Likes Ricochet Droopy Likes Your Face","title":"Minecraft - Volume Alpha (C418)"},{"location":"ideas/waveform/#minecraft-volume-beta-main-c418","text":"Ki Alpha Dead Voxel Blind Spots Flake Moog City 2 Concrete Halls Biome Fest Mutation Haunt Muskie Warmth Floating Trees (Time=Day and Weather=Clear) Aria Math Kyoto Ballad of the Cats Taswell Beginning Dreiton The End Intro","title":"Minecraft - Volume Beta - Main (C418)"},{"location":"ideas/waveform/#minecraft-volume-beta-discs-c418","text":"Chirp (Music Disc) Wait (Music Disc) Mellohi (Music Disc) Stal (Music Disc) Strad (Music Disc) Eleven (Music Disc) Ward (Music Disc) Mall (Music Disc) Blocks (Music Disc) Far (Music Disc)","title":"Minecraft - Volume Beta - Discs (C418)"},{"location":"ideas/waveform/#minecraft-aquatic-update-c418","text":"Axolotl Shuniji Dragon Fish","title":"Minecraft - Aquatic Update (C418)"},{"location":"ideas/waveform/#minecraft-nether-update-lena-raine","text":"Chrysopoeia Rubedo So Below Pigstep - Mono Mix Pigstep - Stereo Mix","title":"Minecraft - Nether Update (Lena Raine)"},{"location":"ideas/waveform/#settings","text":"Setting Description Type Default Enabled Enables the whole entire mod Boolean True Custom Sounds Whether to get custom sounds from resource pack or not Boolean True Client Side Disables non client side features, like structure and battle music. Boolean False Prime Color Primary color when using chat. Numbers to color escape codes. Integer 36 Second Color Secondary color when using chat. Numbers to escape codes. Integer 32 Visualizer Shows waveform of current song in top right hand corner of the screen. Boolean False Music Disc Ambience Whether music disc songs can be added to the rotation of songs. Boolean False","title":"Settings"},{"location":"ideas/waveform/#license","text":"Just as a note, all rights reserved. If you wish to create this mod, you can contact me. Thank you.","title":"License"},{"location":"projects/image-flipper/","text":"Image Flipper Have you ever wanted to rename all the images in a Minecraft resource pack to other images, so someone can get really confused? Or maybe play Undertale with Flowey looking like Undyne's spear? That's why I created this image flipper. Fork the repl, the upload a folder or .zip file with images inside it! It will then rename them all, essentially flipping the data between the .png s. This only works for .png files, and it will only find the images inside the main folder. It will not go into folders inside the folder specified. I was working on adding a .flipignore file that is just a plain text array that specifies images that it won't flip, but this feature isn't implemented yet. This program is free to use! Enjoy! Try typing imgs.zip in the program! Also, don't run more than 20,000 rotations, it crashes repl.it! :)","title":"Image Flipper"},{"location":"projects/image-flipper/#image-flipper","text":"Have you ever wanted to rename all the images in a Minecraft resource pack to other images, so someone can get really confused? Or maybe play Undertale with Flowey looking like Undyne's spear? That's why I created this image flipper. Fork the repl, the upload a folder or .zip file with images inside it! It will then rename them all, essentially flipping the data between the .png s. This only works for .png files, and it will only find the images inside the main folder. It will not go into folders inside the folder specified. I was working on adding a .flipignore file that is just a plain text array that specifies images that it won't flip, but this feature isn't implemented yet. This program is free to use! Enjoy! Try typing imgs.zip in the program! Also, don't run more than 20,000 rotations, it crashes repl.it! :)","title":"Image Flipper"},{"location":"projects/notepad/","text":"Notepad Notepad is a simple, well. Uh... Notepad? Yeah, that's the right word. Features Simple black and white view Monospaceed font Save and load notes from browser data, we don't save anything! Working text highlighting IDE Multi-lang support Easy notation Smooth feel Print the page directly from your website","title":"Notepad"},{"location":"projects/notepad/#notepad","text":"Notepad is a simple, well. Uh... Notepad? Yeah, that's the right word.","title":"Notepad"},{"location":"projects/notepad/#features","text":"Simple black and white view Monospaceed font Save and load notes from browser data, we don't save anything! Working text highlighting IDE Multi-lang support Easy notation Smooth feel Print the page directly from your website","title":"Features"},{"location":"projects/text-dump-engine/","text":"Text Dump Engine What is it? This engine (really just a module) is a handy way to save all your print() code into one file. It loads a .json file, then builds a .py file from that. How do I use it? Very good question. First go to the project page (click the title) then fork it or download it (with the three dots). Editing the JSON Here is a sample JSON text dump: { \"greeting\" : [ \"Hello there my friend!\" , \"How are you today?\" , \"I hope you are well.\" , \"See you around!\" ], \"puns\" : [ \"Nobody:\" , \"\" , \"That random stoplight:\" , \"You have to stop.\" ] } This file builds to a Python file that looks like this: def greeting (): print ( \"Hello there my friend!\" ) input () print ( \"How are you today?) input () print ( \"I hope you are well.\" ) input () print ( \"See you around!\" ) def puns (): print ( \"Nobody:\" ) input () print ( \"\" ) input () print ( \"That random stoplight:\" ) input () print ( \"You have to stop.\" ) Do you see? Keys in the JSON file become function names. Items in the array attached to the key becomes the text printed to the screen. This JSON file is called textdump.json , and it is in the folder called engine/ . The rules for editing the JSON goes by the following: It must follow JSON syntax rules You may have as many keys as you like A key's value must be an array / list The list may have as many values as necessary Importing the Engine Now here comes the true brilliance of the module. You don't need to run any init() functions! By importing the file that supplies the text functions, it automatically rebuilds and reloads the file! So basically, you can just import text.py without worry! Here is a sample import function: from engine.text import * The import * allows you to just run the function name without having to worry about the namespace. You can see the program below.","title":"Text Dump Engine"},{"location":"projects/text-dump-engine/#text-dump-engine","text":"","title":"Text Dump Engine"},{"location":"projects/text-dump-engine/#what-is-it","text":"This engine (really just a module) is a handy way to save all your print() code into one file. It loads a .json file, then builds a .py file from that.","title":"What is it?"},{"location":"projects/text-dump-engine/#how-do-i-use-it","text":"Very good question. First go to the project page (click the title) then fork it or download it (with the three dots).","title":"How do I use it?"},{"location":"projects/text-dump-engine/#editing-the-json","text":"Here is a sample JSON text dump: { \"greeting\" : [ \"Hello there my friend!\" , \"How are you today?\" , \"I hope you are well.\" , \"See you around!\" ], \"puns\" : [ \"Nobody:\" , \"\" , \"That random stoplight:\" , \"You have to stop.\" ] } This file builds to a Python file that looks like this: def greeting (): print ( \"Hello there my friend!\" ) input () print ( \"How are you today?) input () print ( \"I hope you are well.\" ) input () print ( \"See you around!\" ) def puns (): print ( \"Nobody:\" ) input () print ( \"\" ) input () print ( \"That random stoplight:\" ) input () print ( \"You have to stop.\" ) Do you see? Keys in the JSON file become function names. Items in the array attached to the key becomes the text printed to the screen. This JSON file is called textdump.json , and it is in the folder called engine/ . The rules for editing the JSON goes by the following: It must follow JSON syntax rules You may have as many keys as you like A key's value must be an array / list The list may have as many values as necessary","title":"Editing the JSON"},{"location":"projects/text-dump-engine/#importing-the-engine","text":"Now here comes the true brilliance of the module. You don't need to run any init() functions! By importing the file that supplies the text functions, it automatically rebuilds and reloads the file! So basically, you can just import text.py without worry! Here is a sample import function: from engine.text import * The import * allows you to just run the function name without having to worry about the namespace. You can see the program below.","title":"Importing the Engine"}]}